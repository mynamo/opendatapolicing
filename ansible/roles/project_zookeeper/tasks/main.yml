- stat: 
    path: /usr/bin/javac
  register: JAVAC_EXISTS
- name: Install {{ZOOKEEPER_NAME}} dependencies. 
  package:
    name: [java-latest-openjdk-devel,java-latest-openjdk]
  become: yes
  when: JAVAC_EXISTS.stat.exists == false
- name: Create the {{ZOOKEEPER_NAME}} source directory {{ZOOKEEPER_SRC}}. 
  file:
    name: "{{ZOOKEEPER_SRC}}"
    state: directory
    owner: "{{USER_NAME}}"
    group: "{{USER_NAME}}"
  become: yes
- name: Download the {{ZOOKEEPER_NAME}} application. 
  get_url: 
    url: "{{ ZOOKEEPER_DOWNLOAD_URL }}"
    dest: "{{ ZOOKEEPER_DOWNLOAD_DEST }}"
    checksum: "sha512:{{ ZOOKEEPER_DOWNLOAD_SHA512 }}"
- name: Create the {{ZOOKEEPER_NAME}} install directory {{ZOOKEEPER_OPT}}. 
  file:
    name: "{{ZOOKEEPER_OPT}}"
    state: directory
    owner: "{{USER_NAME}}"
    group: "{{USER_NAME}}"
  become: yes
- name: Install {{ZOOKEEPER_NAME}} into the {{ZOOKEEPER_OPT}} install directory. 
  unarchive: 
    src: "{{ ZOOKEEPER_DOWNLOAD_DEST }}"
    dest: "{{ZOOKEEPER_OPT}}"
    remote_src: yes
    extra_opts: [--strip-components=1]
- name: Create the {{ZOOKEEPER_NAME}} install directory {{ZOOKEEPER_OPT}}. 
  file:
    name: "{{ZOOKEEPER_OPT}}"
    state: directory
- name: Create the {{ZOOKEEPER_NAME}} config file {{ZOOKEEPER_CONF}}. 
  template:
    src: zookeeper_config.j2
    dest: "{{ZOOKEEPER_CONF}}"
- name: Create the {{ZOOKEEPER_NAME}} systemd service {{ZOOKEEPER_SYSTEMD}}. 
  template:
    src: zookeeper_systemd_service.j2
    dest: "{{ZOOKEEPER_SYSTEMD}}"
  become: yes
- name: Reload the services. 
  systemd:
    daemon_reload: yes
  become: yes
- name: Start and enable the {{ZOOKEEPER_NAME}} service. 
  service:
    name: "{{ZOOKEEPER_SERVICE}}"
    enabled: yes
    state: restarted
  become: yes

